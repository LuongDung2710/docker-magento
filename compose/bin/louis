#!/bin/bash

# Color set
RED='\033[0;31m'
GREEN='\033[0;32m'
BGREEN='\033[1;32m'
BYELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m'
CHECKMARK='\xE2\x9C\x94'
CROSS='\xE2\x9D\x8C'

DOMAIN=$1
SOURCE_FILE=$2
PROJECT=src
INPUTFILE=project-config.json

# Unzip source file to src folder
echo -e "${BGREEN} Unzip Source Code to src folder \n"
unzip $SOURCE_FILE -d $PROJECT
sleep 2

DB=$(ls $PROJECT/dbdump)

#mv Qarbi module
mv ./Qarbi ./src/app/code/


jq -r '.app_repositories_partner[] | "\(.dest), \(.repo), \(.version)"' "$INPUTFILE" |
while IFS= read -r data; do
 
    dest=$(echo "$data" | cut -d ',' -f1)
    repo=$(echo  "$$data" | cut -d ',' -f2)
    version=$(echo "$data" | cut -d ',' -f3)
 
    echo -e "${CYAN} Start clone repo $repo into $dest with version $version"
    if test -d "src/$dest"; then
    echo -e "${BYELLOW} Directory exists for dest $dest. Delete directory"
    rm -rf "src/$dest"
    fi

    git clone $repo src/$dest --branch $version

    echo "--------------------------------"
done



PHP_COMPOSERVERSION=`jq '.phpcomposer' $INPUTFILE`

#Setup Option
OPTION1="\"7.4-1\""
OPTION2="\"7.4-2\""
OPTION3="\"8.2-2\""

case $PHP_COMPOSERVERSION in
    $OPTION1 ) 
        sed -i 's/louisphp8:1.0/louisphp7.4composer1:1.0/g' compose.yaml;
        sed -i 's/mariadb:10.6/mariadb:10.4/g' compose.yaml;
        ;;
    $OPTION2 )
        sed -i 's/louisphp8:1.0/louisphp7.4composer2.22:1.0/g' compose.yaml;
        sed -i 's/mariadb:10.6/mariadb:10.4/g' compose.yaml;
        ;;
    $OPTION3 )
        sed -i 's/louisphp8:1.0/louisphp8.2composer2.22:1.0/g' compose.yaml;
        ;;
esac

# Start container
echo -e "${BGREEN} Start Container \n"
echo -e "${CYAN}"
bin/start --no-dev
echo -e "\n${BGREEN}Waiting for all containers to start up ...\n${NC}"
sleep 15

# Copy Global auth.json file and example env file
echo -e "${BGREEN} Init auth.json and env.php file \n"
cp ~/.composer/auth.json src
cp env.example.php src/app/etc/env.php

# Copy all file from host to container 
echo -e "${BGREEN} Copy all file from host to container"
bin/copytocontainer --all ## Initial copy will take a few minutes...

# Composer Install 
echo -e "${BGREEN} Composer Install"
echo -e "${CYAN}"
bin/composer config --global --auth http-basic.repo.packagist.com louis.nguyen c01bbcb2c7cb0da26875b3075bece015a419ad301ae9878efae51b2b5fd4
bin/composer install

# Copy all file from container to host 
echo -e "${BGREEN} Copy all file from container to host"
echo -e "${CYAN}"
bin/copyfromcontainer --all ## Initial copy will take a few minutes...

#Replace php-fpm:9000 with fastcgi_backend for 2.4.6-p1
sed -i 's/php-fpm:9000/fastcgi_backend/g' src/nginx.conf.sample;

# Remove Definer for DB sql file and import
echo -e "${BGREEN} Import Database"
sed 's/\sDEFINER=`[^`]*`@`[^`]*`//g' -i src/dbdump/$DB
bin/mysql < src/dbdump/$DB

# Import config from app/etc/env.php and app/etc/config.env file
echo -e "${BGREEN} Import Config"
echo -e "${CYAN}"
bin/magento app:config:import
bin/magento config:set web/secure/base_url https://$DOMAIN/
bin/magento config:set web/unsecure/base_url https://$DOMAIN/
bin/magento config:set 	web/unsecure/base_link_url https://$DOMAIN/
bin/magento config:set 	web/secure/base_link_url https://$DOMAIN/
bin/magento config:set --scope=store --scope-code=admin web/secure/base_url https://$DOMAIN/
bin/magento config:set --scope=store --scope-code=admin web/unsecure/base_url https://$DOMAIN/
bin/magento config:set admin/url/custom https://$DOMAIN/

# Get Magento Version
version=$(cat src/composer.json | grep "magento/product-community-edition")
version=${version:46:3}
if [[ $version = "2.4" ]]; then
    echo -e "\n${BGREEN}Setting up Elasticsearch ...${NC}"
    echo -e "${CYAN}"
    bin/magento config:set catalog/search/engine 'elasticsearch7'
    bin/magento config:set catalog/search/elasticsearch7_server_hostname 'elasticsearch'
    bin/magento config:set catalog/search/elasticsearch7_server_port '9200'
fi

#Import Sensitive Config Base on Project

echo -e "${BGREEN}Start Import Sensitive Configuration"
echo -e "${CYAN}"
ENCODECONFIGURATION=`jq '.configuration' $INPUTFILE | jq -c`
bin/magento config:define:qarbi_sensitive $ENCODECONFIGURATION
#bin/magento config:set:qarbi_sensitive paypal/wpp/api_username apiusername
echo -e "${BGREEN}End Import Sensitive Configuration"


# Create a DNS host entry and setup Magento base url
echo -e "${BGREEN} Set up Domain"

bin/setup-domain $DOMAIN
open https://$DOMAIN