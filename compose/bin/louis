#!/bin/bash

# Color set
RED='\033[0;31m'
GREEN='\033[0;32m'
BGREEN='\033[1;32m'
BYELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m'
CHECKMARK='\xE2\x9C\x94'
CROSS='\xE2\x9D\x8C'

DOMAIN=$1
SOURCE_FILE=$2
PROJECT=src

# Unzip source file to src folder
echo -e "${BGREEN} Unzip Source Code to src folder \n"
unzip $SOURCE_FILE -d $PROJECT
sleep 2

DB=$(ls $PROJECT/dbdump)

#Setup Option
OPTION1="Composer-1-and-PHP-7.4"
OPTION2="Composer-2-and-PHP-7.4"
OPTION3="Composer-2-and-PHP-8.2"
# Select PHP and Composer Version
echo -e "${BGREEN}What project do you want to install?${NC}"
select project in $OPTION1 $OPTION2 $OPTION3; do
    case $project in
        $OPTION1 ) 
            sed -i 's/louisphp8:1.0/louisphp7.4composer1:1.0/g' compose.yaml;
            sed -i 's/mariadb:10.6/mariadb:10.4/g' compose.yaml;
            break;;
        $OPTION2 ) 
            sed -i 's/louisphp8:1.0/louisphp7.4composer2.22:1.0/g' compose.yaml;
            sed -i 's/mariadb:10.6/mariadb:10.4/g' compose.yaml;
            break;;
        $OPTION3 ) 
            sed -i 's/louisphp8:1.0/louisphp8.2composer2.22:1.0/g' compose.yaml;
            break;;
    esac
done

sleep 1


# Start container
echo -e "${BGREEN} Start Container \n"
bin/start --no-dev
echo -e "\n${BGREEN}Waiting for all containers to start up ...\n${NC}"
sleep 15

# Copy Global auth.json file and example env file
echo -e "${BGREEN} Init auth.json and env.php file \n"
cp ~/.composer/auth.json src
cp env.example.php src/app/etc/env.php

# Copy all file from host to container 
echo -e "${BGREEN} Copy all file from host to container"
bin/copytocontainer --all ## Initial copy will take a few minutes...

# Composer Install 
echo -e "${BGREEN} Composer Install"
bin/composer config --global --auth http-basic.repo.packagist.com louis.nguyen c01bbcb2c7cb0da26875b3075bece015a419ad301ae9878efae51b2b5fd4
bin/composer install

#Replace php-fpm:9000 with fastcgi_backend for 2.4.6-p1
sed -i 's/php-fpm:9000/fastcgi_backend/g' src/nginx.conf.sample;

# Copy all file from container to host 
echo -e "${BGREEN} Copy all file from container to host"
bin/copyfromcontainer --all ## Initial copy will take a few minutes...

# Remove Definer for DB sql file and import
echo -e "${BGREEN} Import Database"
sed 's/\sDEFINER=`[^`]*`@`[^`]*`//g' -i src/dbdump/$DB
bin/mysql < src/dbdump/$DB

# Import config from app/etc/env.php and app/etc/config.env file
echo -e "${BGREEN} Import Config"
bin/magento app:config:import
bin/magento config:set web/secure/base_url https://$DOMAIN/
bin/magento config:set web/unsecure/base_url https://$DOMAIN/
bin/magento config:set 	web/unsecure/base_link_url https://$DOMAIN/
bin/magento config:set 	web/secure/base_link_url https://$DOMAIN/
bin/magento config:set --scope=store --scope-code=admin web/secure/base_url https://$DOMAIN/
bin/magento config:set --scope=store --scope-code=admin web/unsecure/base_url https://$DOMAIN/
bin/magento config:set admin/url/custom https://$DOMAIN/

# Get Magento Version
version=$(cat src/composer.json | grep "magento/product-community-edition")
version=${version:46:3}
if [[ $version = "2.4" ]]; then
    echo -e "\n${BGREEN}Setting up Elasticsearch ...${NC}"
    bin/magento config:set catalog/search/engine 'elasticsearch7'
    bin/magento config:set catalog/search/elasticsearch7_server_hostname 'elasticsearch'
    bin/magento config:set catalog/search/elasticsearch7_server_port '9200'
fi

# Create a DNS host entry and setup Magento base url
echo -e "${BGREEN} Set up Domain"

bin/setup-domain $DOMAIN
open https://$DOMAIN